using System;

namespace SimpleLambda
{
    class MainApp
    {
        delegate int Calculate(int a, int b); // 익명 메소드를 만들려면 대리자가 필요함.

        static void Main(string[] args)
        {
            Calculate calc = (a, b) => a + b; // 두 개의 int 형식 매개 변수 a,b를 받아 이 둘을 더해 반환하는 익명 메소드를 람다식으로 만들었습니다.
                                              // C# 컴파일러는 Calculator 대리자의 선언코드로부터 이 람다식이 만드는 익명 메소드의 매개 변수 형식을 유추해냅니다. 
            Console.WriteLine($"{3} + {4} : {calc(3, 4)}");
        }
    }
}

// 람다식 개념정리
// 1. 람다식은 익명 메소드를 만드는 또 하나의 방법이
// 2. 람다식은 알론조 처치라는 수학자 1936년에 발표한 람다 계산법에서 사용하는 식입니다.
// 3. 람다 계산법은 함수의 정의와 변수, 함수의 적용으로 이루어져 있습니다.
// 4. 람다 계산법에서는 어떤 값을 변수에 대입하고 함수를 변수에 대입하는 것을 함수의 적용이라고 부른다.
// 5. 람다식은 익명 메소드를 만들기 위해 사용된다.

// 무명 함수 : 람다식으로 만드는 익명 메소드

// 람다식 선언하는 형식
// 매개_변수_목록 => 식




