using System;

namespace PropertiesInAbstractClass
{
    abstract class Product
    {
        private static int serial = 0;
        public string SerialID // 추상 클래스는 구현을 가진 프로퍼티
        {
            get { return String.Format("{0:d5}", serial++); }
        }
        abstract public DateTime ProductDate // 구현이 없는 추상 프로퍼티 모두를 가질 수 있습니.
        {
            get;
            set;
        }
    }

    class MyProduct : Product
    {
        public override DateTime ProductDate // 파생 클래스는 부모 추상 클래스의 모든 추상 메소드 뿐 아니라 추상 프로퍼티를 재정의해야 합니.
        {
            get;
            set;
        }
    }

    class MainApp
    {
        static void Main(string[] args)
        {
            Product product_1 = new MyProduct()
            { ProductDate = new DateTime(2018, 1, 10) };

            Console.WriteLine("Product:{0}, Product Date: {1}",
                product_1.SerialID,
                product_1.ProductDate);

            Product product_2 = new MyProduct()
            { ProductDate = new DateTime(2018, 2, 3) };

            Console.WriteLine("Product:{0}, Product Date :{1}",
                product_2.SerialID,
                product_2.ProductDate);

        }
    }
}

// 추상클래스와 프로퍼티
// 추상 프로퍼티 선언 형식
// abstract class 추상 클래스이름
// {
//      abstract 데이터형식 프로퍼티이름
//      {
//          get;
//          set;
//      }
// }
